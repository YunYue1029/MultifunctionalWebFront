@{
    ViewData["Title"] = "Expense Tracker";
}

<h1>Expense Tracker</h1>

<!-- 新增記帳記錄 -->
<input type="number" id="amount" placeholder="Enter amount">
<select id="category">
    <option value="income">Income</option>
    <option value="expense">Expense</option>
</select>
<button onclick="addExpense()">Add Record</button>

<!-- 讀取記帳記錄 -->
<button onclick="loadExpenses()">Load Records</button>

<!-- 記帳列表 -->
<ul id="expenseList"></ul>

<script>
    const expenseApiUrl = "http://localhost:5174/api/expenses";

    // 新增記帳
    async function addExpense() {
        const amount = document.getElementById("amount").value;
        const category = document.getElementById("category").value;

        if (!amount.trim()) {
            alert("Please enter an amount.");
            return;
        }

        try {
            let response = await fetch(expenseApiUrl, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ amount: parseFloat(amount), category: category })
            });

            if (!response.ok) throw new Error("Failed to add record");
            document.getElementById("amount").value = "";
            loadExpenses();
        } catch (error) {
            console.error("Error adding record:", error);
            alert("Error adding record.");
        }
    }

    // 讀取記帳記錄
    async function loadExpenses() {
        try {
            let response = await fetch(expenseApiUrl);
            if (!response.ok) throw new Error("Failed to load records");

            let expenses = await response.json();
            const expenseList = document.getElementById("expenseList");
            expenseList.innerHTML = "";

            expenses.forEach(expense => {
                let li = document.createElement("li");
                li.innerText = `${expense.amount} (${expense.category})`;
                
                let deleteBtn = document.createElement("button");
                deleteBtn.innerText = "Delete";
                deleteBtn.onclick = () => deleteExpense(expense.id);
                li.appendChild(deleteBtn);

                expenseList.appendChild(li);
            });
        } catch (error) {
            console.error("Error loading records:", error);
            alert("Error loading records.");
        }
    }

    // 刪除記帳記錄
    async function deleteExpense(id) {
        try {
            let response = await fetch(`${expenseApiUrl}/${id}`, { method: "DELETE" });
            if (!response.ok) throw new Error("Failed to delete record");
            loadExpenses();
        } catch (error) {
            console.error("Error deleting record:", error);
            alert("Error deleting record.");
        }
    }

    // 頁面載入時自動讀取記錄
    loadExpenses();
</script>